//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity balanceEntity { get { return GetGroup(GameMatcher.Balance).GetSingleEntity(); } }
    public GameScene.ECS.Components.BalanceComponent balance { get { return balanceEntity.balance; } }
    public bool hasBalance { get { return balanceEntity != null; } }

    public GameEntity SetBalance(int newValue) {
        if (hasBalance) {
            throw new Entitas.EntitasException("Could not set Balance!\n" + this + " already has an entity with GameScene.ECS.Components.BalanceComponent!",
                "You should check if the context already has a balanceEntity before setting it or use context.ReplaceBalance().");
        }
        var entity = CreateEntity();
        entity.AddBalance(newValue);
        return entity;
    }

    public void ReplaceBalance(int newValue) {
        var entity = balanceEntity;
        if (entity == null) {
            entity = SetBalance(newValue);
        } else {
            entity.ReplaceBalance(newValue);
        }
    }

    public void RemoveBalance() {
        balanceEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public GameScene.ECS.Components.BalanceComponent balance { get { return (GameScene.ECS.Components.BalanceComponent)GetComponent(GameComponentsLookup.Balance); } }
    public bool hasBalance { get { return HasComponent(GameComponentsLookup.Balance); } }

    public void AddBalance(int newValue) {
        var index = GameComponentsLookup.Balance;
        var component = CreateComponent<GameScene.ECS.Components.BalanceComponent>(index);
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceBalance(int newValue) {
        var index = GameComponentsLookup.Balance;
        var component = CreateComponent<GameScene.ECS.Components.BalanceComponent>(index);
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveBalance() {
        RemoveComponent(GameComponentsLookup.Balance);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherBalance;

    public static Entitas.IMatcher<GameEntity> Balance {
        get {
            if (_matcherBalance == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Balance);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherBalance = matcher;
            }

            return _matcherBalance;
        }
    }
}
