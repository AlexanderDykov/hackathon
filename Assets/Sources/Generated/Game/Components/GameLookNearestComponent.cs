//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public GameScene.ECS.Components.LookNearestComponent lookNearest { get { return (GameScene.ECS.Components.LookNearestComponent)GetComponent(GameComponentsLookup.LookNearest); } }
    public bool hasLookNearest { get { return HasComponent(GameComponentsLookup.LookNearest); } }

    public void AddLookNearest(GameScene.ECS.Components.CreatureType newValue) {
        var index = GameComponentsLookup.LookNearest;
        var component = CreateComponent<GameScene.ECS.Components.LookNearestComponent>(index);
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceLookNearest(GameScene.ECS.Components.CreatureType newValue) {
        var index = GameComponentsLookup.LookNearest;
        var component = CreateComponent<GameScene.ECS.Components.LookNearestComponent>(index);
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveLookNearest() {
        RemoveComponent(GameComponentsLookup.LookNearest);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherLookNearest;

    public static Entitas.IMatcher<GameEntity> LookNearest {
        get {
            if (_matcherLookNearest == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.LookNearest);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherLookNearest = matcher;
            }

            return _matcherLookNearest;
        }
    }
}
