//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity worldEntity { get { return GetGroup(GameMatcher.World).GetSingleEntity(); } }
    public GameScene.ECS.Components.WorldComponent world { get { return worldEntity.world; } }
    public bool hasWorld { get { return worldEntity != null; } }

    public GameEntity SetWorld(UnityEngine.Vector2Int newSize) {
        if (hasWorld) {
            throw new Entitas.EntitasException("Could not set World!\n" + this + " already has an entity with GameScene.ECS.Components.WorldComponent!",
                "You should check if the context already has a worldEntity before setting it or use context.ReplaceWorld().");
        }
        var entity = CreateEntity();
        entity.AddWorld(newSize);
        return entity;
    }

    public void ReplaceWorld(UnityEngine.Vector2Int newSize) {
        var entity = worldEntity;
        if (entity == null) {
            entity = SetWorld(newSize);
        } else {
            entity.ReplaceWorld(newSize);
        }
    }

    public void RemoveWorld() {
        worldEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public GameScene.ECS.Components.WorldComponent world { get { return (GameScene.ECS.Components.WorldComponent)GetComponent(GameComponentsLookup.World); } }
    public bool hasWorld { get { return HasComponent(GameComponentsLookup.World); } }

    public void AddWorld(UnityEngine.Vector2Int newSize) {
        var index = GameComponentsLookup.World;
        var component = CreateComponent<GameScene.ECS.Components.WorldComponent>(index);
        component.Size = newSize;
        AddComponent(index, component);
    }

    public void ReplaceWorld(UnityEngine.Vector2Int newSize) {
        var index = GameComponentsLookup.World;
        var component = CreateComponent<GameScene.ECS.Components.WorldComponent>(index);
        component.Size = newSize;
        ReplaceComponent(index, component);
    }

    public void RemoveWorld() {
        RemoveComponent(GameComponentsLookup.World);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherWorld;

    public static Entitas.IMatcher<GameEntity> World {
        get {
            if (_matcherWorld == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.World);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherWorld = matcher;
            }

            return _matcherWorld;
        }
    }
}
