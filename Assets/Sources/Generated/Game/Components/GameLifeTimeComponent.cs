//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity lifeTimeEntity { get { return GetGroup(GameMatcher.LifeTime).GetSingleEntity(); } }
    public GameScene.ECS.Components.LifeTimeComponent lifeTime { get { return lifeTimeEntity.lifeTime; } }
    public bool hasLifeTime { get { return lifeTimeEntity != null; } }

    public GameEntity SetLifeTime(int newValue) {
        if (hasLifeTime) {
            throw new Entitas.EntitasException("Could not set LifeTime!\n" + this + " already has an entity with GameScene.ECS.Components.LifeTimeComponent!",
                "You should check if the context already has a lifeTimeEntity before setting it or use context.ReplaceLifeTime().");
        }
        var entity = CreateEntity();
        entity.AddLifeTime(newValue);
        return entity;
    }

    public void ReplaceLifeTime(int newValue) {
        var entity = lifeTimeEntity;
        if (entity == null) {
            entity = SetLifeTime(newValue);
        } else {
            entity.ReplaceLifeTime(newValue);
        }
    }

    public void RemoveLifeTime() {
        lifeTimeEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public GameScene.ECS.Components.LifeTimeComponent lifeTime { get { return (GameScene.ECS.Components.LifeTimeComponent)GetComponent(GameComponentsLookup.LifeTime); } }
    public bool hasLifeTime { get { return HasComponent(GameComponentsLookup.LifeTime); } }

    public void AddLifeTime(int newValue) {
        var index = GameComponentsLookup.LifeTime;
        var component = CreateComponent<GameScene.ECS.Components.LifeTimeComponent>(index);
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceLifeTime(int newValue) {
        var index = GameComponentsLookup.LifeTime;
        var component = CreateComponent<GameScene.ECS.Components.LifeTimeComponent>(index);
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveLifeTime() {
        RemoveComponent(GameComponentsLookup.LifeTime);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherLifeTime;

    public static Entitas.IMatcher<GameEntity> LifeTime {
        get {
            if (_matcherLifeTime == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.LifeTime);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherLifeTime = matcher;
            }

            return _matcherLifeTime;
        }
    }
}
