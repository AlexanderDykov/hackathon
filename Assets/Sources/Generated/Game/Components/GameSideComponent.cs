//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public GameScene.ECS.Components.SideComponent side { get { return (GameScene.ECS.Components.SideComponent)GetComponent(GameComponentsLookup.Side); } }
    public bool hasSide { get { return HasComponent(GameComponentsLookup.Side); } }

    public void AddSide(GameScene.ECS.Components.Side newValue) {
        var index = GameComponentsLookup.Side;
        var component = CreateComponent<GameScene.ECS.Components.SideComponent>(index);
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceSide(GameScene.ECS.Components.Side newValue) {
        var index = GameComponentsLookup.Side;
        var component = CreateComponent<GameScene.ECS.Components.SideComponent>(index);
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveSide() {
        RemoveComponent(GameComponentsLookup.Side);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherSide;

    public static Entitas.IMatcher<GameEntity> Side {
        get {
            if (_matcherSide == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Side);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherSide = matcher;
            }

            return _matcherSide;
        }
    }
}
